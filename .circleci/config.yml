
version: 2
jobs:
  prepare:
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
        user: circleci
    steps:
      - checkout:
          path: ~/nebulae/repo
      - persist_to_workspace:
          root: ~/nebulae
          paths:
            - repo
            - scripts

  build-frontend:
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
    steps:
      - attach_workspace:
          at: ~/nebulae
      - run:
          name: Installing NebulaE cli & Compose FrontEnd
          command: |            
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/            
            gitChanged frontend || echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /tmp/gcloud-service-key.json
            gitChanged frontend || npm config set prefix '~/.npm-global'
            gitChanged frontend || export PATH=~/.npm-global/bin:$PATH
            gitChanged frontend || source ~/.profile
            gitChanged frontend || npm install -g @nebulae/cli
            gitChanged frontend || npm install -g @angular/cli
            gitChanged frontend || nebulae compose-ui production --shell-type=FUSE2_ANGULAR --shell-repo=https://github.com/nebulae-tpm/emi.git --frontend-id=$CIRCLE_PROJECT_REPONAME --output-dir=~/nebulae/frontend/emi/ --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json
            gitChanged frontend || ls ~/nebulae/frontend/emi/
      - setup_remote_docker
      - run:
          name: Build docker image and push it to hub
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            mkdir ~/nebulae/frontend
            gitChanged frontend || ( mkdir ~/nebulae/frontend && cd  ~/nebulae/frontend/ && git clone https://github.com/nebulae-tpm/emi --depth=1 --directory=shell)      
            gitChanged frontend || ls ~/nebulae/frontend/emi/dist/ 
            gitChanged frontend || export DOCKERHUB_NAMESPACE=$DOCKERHUB_NAMESPACE
            gitChanged frontend || export DOCKERHUB_USER=$DOCKERHUB_USER
            gitChanged frontend || export DOCKERHUB_PASS=$DOCKERHUB_PASS
            gitChanged frontend || export FRONTEND_SHELL_PATH=~/nebulae/frontend/emi/
            gitChanged frontend || cd ~/nebulae/repo
            gitChanged frontend || sh ~/nebulae/frontend/shell/deployment/docker/build-docker-hub.sh
      - persist_to_workspace:
          root: ~/nebulae/
          paths:
            - frontend
            
                  
  build-api:    
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
    steps:
      - run:
          name: Installing NebulaE cli & Compose API
          command: |    
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/            
            gitChanged api || echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /tmp/gcloud-service-key.json
            gitChanged api || npm config set prefix '~/.npm-global'
            gitChanged api || export PATH=~/.npm-global/bin:$PATH
            gitChanged api || source ~/.profile
            gitChanged api || npm install -g @nebulae/cli
            gitChanged api || nebulae compose-api production --api-type=NEBULAE_GATEWAY --api-repo=https://github.com/nebulae-tpm/gateway.git --api-id=gateway --output-dir=~/nebulae/api/gateway/ --store-type=GCP_DATASTORE --gcp-service-account-token=/tmp/gcloud-service-key.json      
            gitChanged api || ls ~/nebulae/api/gateway/ 
      - setup_remote_docker
      - run:
          name: Build docker image and push it to hub
          command: | 
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            mkdir ~/nebulae/api
            gitChanged api || ( mkdir ~/nebulae/api && cd  ~/nebulae/api/ && git clone https://github.com/nebulae-tpm/gateway --depth=1 --directory=shell)     
            gitChanged api || export DOCKERHUB_NAMESPACE=$DOCKERHUB_NAMESPACE
            gitChanged api || export DOCKERHUB_USER=$DOCKERHUB_USER
            gitChanged api || export DOCKERHUB_PASS=$DOCKERHUB_PASS
            gitChanged api || export API_SHELL_PATH=/tmp/
            gitChanged api || sh ~/nebulae/api/shell/deployment/docker/build-docker-hub.sh
      - persist_to_workspace:
          root: ~/nebulae/
          paths:
            - api   
            
  build-backend:    
    working_directory: ~/nebulae/
    docker:
      - image: circleci/node:9.9.0
        command: bash
    steps:
      - setup_remote_docker      
      - run:
          name: Build docker image for RECEPCIONIST
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            export DOCKERHUB_IMAGE=devices-report.backend.devices-report-recepcionist            
            export DOCKERHUB_TAG=0.0.1
            gitChanged backend/devices-report-receptionist || docker build  -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:$DOCKERHUB_TAG -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest backend/devices-report-recepcionist
            gitChanged backend/devices-report-receptionist || docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
            gitChanged backend/devices-report-receptionist || docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:$DOCKERHUB_TAG
            gitChanged backend/devices-report-receptionist || docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest
      - run:
          name: Build docker image for HANDLER
          command: |
            source ~/nebulae/repo/.circleci/scripts/gitChanged.sh
            cd ~/nebulae/repo/
            export DOCKERHUB_IMAGE=devices-report.backend.devices-report-handler
            export DOCKERHUB_TAG=0.0.1
            gitChanged backend/devices-report-handler || docker build  -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:$DOCKERHUB_TAG -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest backend/devices-report-handler
            gitChanged backend/devices-report-handler || docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
            gitChanged backend/devices-report-handler || docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:$DOCKERHUB_TAG
            gitChanged backend/devices-report-handler || docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_IMAGE:latest

  deploy-prod:
      working_directory: ~/nebulae/
      docker:
        - image: google/cloud-sdk:latest
      steps:
        - checkout
        - run:
            name: Setup gcloud & kubectl
            command: |
              echo $GCP_SERVICE_ACCOUNT_PROD | base64 --decode --ignore-garbage > /root/gcloud-service-key.json
              gcloud auth activate-service-account --key-file /root/gcloud-service-key.json            
              gcloud --quiet config set project $GKE_PROJECT_PROD
              gcloud --quiet config set compute/zone $GKE_ZONE_PROD
              gcloud --quiet container clusters get-credentials $GKE_CLUSTER
        - run:
            name: Deploy on Kubernetes
            command: |
              kubectl apply -f ~/nebulae/deployment/gke/              
workflows: 
  version: 2
  build-and-deploy:
    jobs:
      - prepare:
          context: TPM
      - build-frontend:
          context: TPM
          requires:
            - prepare
      - build-api:
          context: TPM
          requires:
            - prepare
      - build-backend:
          context: TPM
          requires:
            - prepare
      - deploy-prod:
          context: TPM
          requires:
            - build-frontend
            - build-api
            - build-backend